1. 
	AM(인증관리자)
		 ↑
	PM(제공관리자) ↔ AP(인증제공자) ↔ 4) UDS()
					인증처리객체	 인증정보객체
									직접구현
									
2. 해결) 직접 UserDetailService 구현하는 방법

3. 어떤 인증받은 추가적인 정보를 저장
	MemberVO.java + 추가적인 정보 필드
	AuthVO.java  권한 정보
	
4. 인증받은 정보를 저장 - DB 관련 코딩 추가, 수정
	MemberMapper.java
	MemberMapper.xml
	
5. CustomUserDetailsService 직접 구현
	오버라이딩
	UserDetails loadUserByUsername(String username)
			username == member 테이블의 id
			로그인한 회원 정보를 select 작업
			MemberVO 객체 생성 - UserDetails 타입으로 변환
			
			org.doit.ik.security.domain.CustomerUser
								
	UserDetails 클래스 타입으로 반환

6. security-context.xml
	CustomUserDetailsService 설정..
	
7. 실습
	1) noticeReg.jsp 글쓰기
		로그인 정보 출력 코딩 추가
	2) 글 쓰기 작성자 => 로그인 사용자 설정
		CustomerController  noticeReg() + GET
	
	3) 글 수정, 삭제 => 작성자만 사용할 수 있는 버튼(메뉴) + 관리자
	
---------------------------------------------------------------------------






