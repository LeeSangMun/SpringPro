N-tier 방식
3-tier 방식
웹 프로젝트 3-tier 방식
1) 화면 계층			- Presentation Tier
2) 비지니스(로직) 계층		- Business Tier
3) 데이터 계층 == 영속 계층		- Persistence Tier
-- 스프링 MVC 패턴 개발 --
-- 패키지 --
org.doit.ik
 ㄴ config : 설정 관련 
 ㄴ domain : VO, DTO 클래스
 ㄴ persistence : DAO, Mybatis 인터페이스, 클래스 mapper
 ㄴ controller
 ㄴ service
 ㄴ exception
 ㄴ aop
 ㄴ util
 ㄴ security

----------------------------------------------------------------------------------------
   CREATE TABLE tbl_board
    (
      bno number(10)
      , title varchar2(200) not null
      , content varchar2(2000) not null
      , writer varchar2(50) not null
      , regdate date default sysdate
      , updatedate date default sysdate
    );
    
    alter table tbl_board add constraint pk_tblboard_bno primary key(bno);
    
     CREATE SEQUENCE seq_board;  
----------------------------------------------------------------------------------------

1. DB 환경 확인 + MyBatis
	ㄴ pom.xml 의존모듈 확인.
	ㄴ root-context.xml DB 연동 모든 스프링 빈 객체 생성 + 등록 + 연결
		- 스프링, MyBatis 에서 DB 연동할 때 DataSource 객체 사용
2. web.xml

3. org.doit.ik.domain 패키지 추가
	ㄴ BoardVO

4. 게시글 목록
	org.doit.ik.mapper 패키지
	  ㄴ BoardMapper.java 인터페이스
	  
	resources 
	  ㄴ org.doit.ik.mapper 폴더
		ㄴ BoardMapper.xml 

5. HomeController.java 복사 붙이기
	ㄴ BoardController.java

6. home_original.jsp 이름 변경
   home.jsp 새로 파일 추가.

7. org.doit.ik.service 패키지
	ㄴ BoardService 인터페이스
	ㄴ BoardServiceImpl

8. servelt-context.xml
<context:component-scan base-package="org.doit.ik" />
org.doit.ik 패키지 및 하위 패키지를 찾아서
component들을 자동으로 스캔해서 스프링빈 객체로 등록 + 연결
@Component
@Controller
@Service
@Repository

9. ViewResolver 등록 : View 검색
<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	<beans:property name="prefix" value="/WEB-INF/views/" />
	<beans:property name="suffix" value=".jsp" />
</beans:bean>

	/WEB-INF/views/board/list.jsp 응답페이지

10. webapp
	ㄴ board
		ㄴ list 요청 URL

11. <a href="/board/register">글쓰기</a>
	1) 글쓰기 페이지 응답. register.jsp 추가
	2) BoardController.java 컨트롤러메서드 추가.
	   register.jsp 응답
	

	1) "/board/register" + POST
	
			





















