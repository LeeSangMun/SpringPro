[p511] 트랜잭션 전파와 격리 레벨

전파방식 ? 트랜잭션 진행 중에 또 다른 새로운 
		트랜잭션이 처리되어야 할 경우
		
	(p512 참고)
	@T
	aaa() {
		bbb();
	}
	
	@T
	bbb() {
	}
	
	
	[실습]
	
	1) 공지사항등록 + 2) 작성자 포인트 1증가
		insert			update
		
	위의 메서드 수정
	
	ㄱ. 
	@T
	[ insertAndPointUpOfMember() ]
	{
		insert();
		insert();
	}
	
	@T
	[ insert() ]
	1) 공지사항등록 + 2) 작성자 포인트 1증가
		insert			update
	
	
1) NoticeDaoImpl.java
 
 // [2] 공지사항 등록 + 작성자 포인트 증가 => 트랜잭션
	@Transactional(propagation = Propagation.REQUIRED, isolation = Isolation.DEFAULT)
	public int insert(NoticeVO notice) throws ClassNotFoundException, SQLException {
		// A. 공지사항 쓰기
		String sql = "INSERT INTO NOTICES(SEQ, TITLE, CONTENT, WRITER, REGDATE, HIT, FILESRC) "
				+ " VALUES( (SELECT NVL(MAX(TO_NUMBER(SEQ))+1, 1) FROM NOTICES), :title, :content, :writer, SYSDATE, 0, :filesrc)";

		// A
		SqlParameterSource parameterSource = new BeanPropertySqlParameterSource(notice);
		npJdbcTemplate.update(sql, parameterSource);

		// B. 작성자 포인트 1증가
		String sql2 = "UPDATE member "
				+ " SET point = point + 1 "
				+ " WHERE id = :id ";

		// B
		MapSqlParameterSource paramSource =  new MapSqlParameterSource();
		paramSource.addValue("id", "mun");
		int updateCount = npJdbcTemplate.update(sql2, paramSource);
		
		return updateCount;
	}
	
	// [6] 전파방식 설명하기 위해 insertAndPointUpOfMember 수정
	@Override
	// @Transactional(isolation = Isolation.DEFAULT)
	public void insertAndPointUpOfMember(NoticeVO notice, String id) throws ClassNotFoundException, SQLException {
		
		insert(notice);
		
		insert(notice);
	}
	
2)
	// @T X
	insertAndPointUpOfMember() {
		insert();	// TEST-8   0 	Point=2
		insert();	// TEST-8-2 X	Point=3 예외 발생
	}
	
	@T
	insert() {
	}
	
	(문제점) 
	
	이유는 같은 클래스(NoticeDaoImpl) 내에서 
	다른 메소드를 호출하는 구조로는
	(insertAndPointUpOfMember() => insert())
	AOP 방식으로 트랜잭션 처리가 되지 않는다는 것입니다. 
	
	따라서, 
	이 문제를 해결하려면 
	별도의 서비스 클래스를 만들어서 
	그 곳에서 게시글 등록과 포인트 증가 메소드를 호출하도록 해야 합니다.
	(insertAndPointUpOfMember() => insert() 분리해야 된다.)
	
3) org.doit.ik.service; 패키지 추가
	ㄴ MemberShipService 인터페이스 추가
	ㄴ MemberShipServiceImpl 클래스 추가
	
4) CustomerController 수정

5) 
ALTER TABLE member
DROP CONSTRAINT ck_notices_point;

ALTER TABLE notices
DROP CONSTRAINT ck_notices_title;
	
	
	
	
	
	